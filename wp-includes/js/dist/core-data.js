this["wp"]=this["wp"]||{};this["wp"]["coreData"]=(function(modules){var installedModules={};function __webpack_require__(moduleId){if(installedModules[moduleId]){return installedModules[moduleId].exports;}
var module=installedModules[moduleId]={i:moduleId,l:false,exports:{}};modules[moduleId].call(module.exports,module,module.exports,__webpack_require__);module.l=true;return module.exports;}
__webpack_require__.m=modules;__webpack_require__.c=installedModules;__webpack_require__.d=function(exports,name,getter){if(!__webpack_require__.o(exports,name)){Object.defineProperty(exports,name,{enumerable:true,get:getter});}};__webpack_require__.r=function(exports){if(typeof Symbol!=='undefined'&&Symbol.toStringTag){Object.defineProperty(exports,Symbol.toStringTag,{value:'Module'});}
Object.defineProperty(exports,'__esModule',{value:true});};__webpack_require__.t=function(value,mode){if(mode&1)value=__webpack_require__(value);if(mode&8)return value;if((mode&4)&&typeof value==='object'&&value&&value.__esModule)return value;var ns=Object.create(null);__webpack_require__.r(ns);Object.defineProperty(ns,'default',{enumerable:true,value:value});if(mode&2&&typeof value!='string')for(var key in value)__webpack_require__.d(ns,key,function(key){return value[key];}.bind(null,key));return ns;};__webpack_require__.n=function(module){var getter=module&&module.__esModule?function getDefault(){return module['default'];}:function getModuleExports(){return module;};__webpack_require__.d(getter,'a',getter);return getter;};__webpack_require__.o=function(object,property){return Object.prototype.hasOwnProperty.call(object,property);};__webpack_require__.p="";return __webpack_require__(__webpack_require__.s="dsJ0");})
({"1ZqX":(function(module,exports){(function(){module.exports=window["wp"]["data"];}());}),"7Cbv":(function(module,__webpack_exports__,__webpack_require__){"use strict";var getRandomValues;var rnds8=new Uint8Array(16);function rng(){if(!getRandomValues){getRandomValues=typeof crypto!=='undefined'&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||typeof msCrypto!=='undefined'&&typeof msCrypto.getRandomValues==='function'&&msCrypto.getRandomValues.bind(msCrypto);if(!getRandomValues){throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');}}
return getRandomValues(rnds8);}
var regex=(/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i);function validate(uuid){return typeof uuid==='string'&&regex.test(uuid);}
var esm_browser_validate=(validate);var byteToHex=[];for(var stringify_i=0;stringify_i<256;++stringify_i){byteToHex.push((stringify_i+0x100).toString(16).substr(1));}
function stringify(arr){var offset=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;var uuid=(byteToHex[arr[offset+0]]+byteToHex[arr[offset+1]]+byteToHex[arr[offset+2]]+byteToHex[arr[offset+3]]+'-'+byteToHex[arr[offset+4]]+byteToHex[arr[offset+5]]+'-'+byteToHex[arr[offset+6]]+byteToHex[arr[offset+7]]+'-'+byteToHex[arr[offset+8]]+byteToHex[arr[offset+9]]+'-'+byteToHex[arr[offset+10]]+byteToHex[arr[offset+11]]+byteToHex[arr[offset+12]]+byteToHex[arr[offset+13]]+byteToHex[arr[offset+14]]+byteToHex[arr[offset+15]]).toLowerCase();if(!esm_browser_validate(uuid)){throw TypeError('Stringified UUID is invalid');}
return uuid;}
var esm_browser_stringify=(stringify);function v4(options,buf,offset){options=options||{};var rnds=options.random||(options.rng||rng)();rnds[6]=rnds[6]&0x0f|0x40;rnds[8]=rnds[8]&0x3f|0x80;if(buf){offset=offset||0;for(var i=0;i<16;++i){buf[offset+i]=rnds[i];}
return buf;}
return esm_browser_stringify(rnds);}
var esm_browser_v4=__webpack_exports__["a"]=(v4);}),"FtRg":(function(module,exports,__webpack_require__){"use strict";function _typeof(obj){if(typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"){_typeof=function(obj){return typeof obj;};}else{_typeof=function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};}
return _typeof(obj);}
function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}
function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}
function _createClass(Constructor,protoProps,staticProps){if(protoProps)_defineProperties(Constructor.prototype,protoProps);if(staticProps)_defineProperties(Constructor,staticProps);return Constructor;}
function getValuePair(instance,key){var _map=instance._map,_arrayTreeMap=instance._arrayTreeMap,_objectTreeMap=instance._objectTreeMap;if(_map.has(key)){return _map.get(key);}
var properties=Object.keys(key).sort();var map=Array.isArray(key)?_arrayTreeMap:_objectTreeMap;for(var i=0;i<properties.length;i++){var property=properties[i];map=map.get(property);if(map===undefined){return;}
var propertyValue=key[property];map=map.get(propertyValue);if(map===undefined){return;}}
var valuePair=map.get('_ekm_value');if(!valuePair){return;}
_map.delete(valuePair[0]);valuePair[0]=key;map.set('_ekm_value',valuePair);_map.set(key,valuePair);return valuePair;}
var EquivalentKeyMap=function(){function EquivalentKeyMap(iterable){_classCallCheck(this,EquivalentKeyMap);this.clear();if(iterable instanceof EquivalentKeyMap){var iterablePairs=[];iterable.forEach(function(value,key){iterablePairs.push([key,value]);});iterable=iterablePairs;}
if(iterable!=null){for(var i=0;i<iterable.length;i++){this.set(iterable[i][0],iterable[i][1]);}}}
_createClass(EquivalentKeyMap,[{key:"set",value:function set(key,value){if(key===null||_typeof(key)!=='object'){this._map.set(key,value);return this;}
var properties=Object.keys(key).sort();var valuePair=[key,value];var map=Array.isArray(key)?this._arrayTreeMap:this._objectTreeMap;for(var i=0;i<properties.length;i++){var property=properties[i];if(!map.has(property)){map.set(property,new EquivalentKeyMap());}
map=map.get(property);var propertyValue=key[property];if(!map.has(propertyValue)){map.set(propertyValue,new EquivalentKeyMap());}
map=map.get(propertyValue);}
var previousValuePair=map.get('_ekm_value');if(previousValuePair){this._map.delete(previousValuePair[0]);}
map.set('_ekm_value',valuePair);this._map.set(key,valuePair);return this;}},{key:"get",value:function get(key){if(key===null||_typeof(key)!=='object'){return this._map.get(key);}
var valuePair=getValuePair(this,key);if(valuePair){return valuePair[1];}}},{key:"has",value:function has(key){if(key===null||_typeof(key)!=='object'){return this._map.has(key);}
return getValuePair(this,key)!==undefined;}},{key:"delete",value:function _delete(key){if(!this.has(key)){return false;}
this.set(key,undefined);return true;}},{key:"forEach",value:function forEach(callback){var _this=this;var thisArg=arguments.length>1&&arguments[1]!==undefined?arguments[1]:this;this._map.forEach(function(value,key){if(key!==null&&_typeof(key)==='object'){value=value[1];}
callback.call(thisArg,value,key,_this);});}},{key:"clear",value:function clear(){this._map=new Map();this._arrayTreeMap=new Map();this._objectTreeMap=new Map();}},{key:"size",get:function get(){return this._map.size;}}]);return EquivalentKeyMap;}();module.exports=EquivalentKeyMap;}),"GRId":(function(module,exports){(function(){module.exports=window["wp"]["element"];}());}),"HSyU":(function(module,exports){(function(){module.exports=window["wp"]["blocks"];}());}),"Mmq9":(function(module,exports){(function(){module.exports=window["wp"]["url"];}());}),"NMb1":(function(module,exports){(function(){module.exports=window["wp"]["deprecated"];}());}),"YLtl":(function(module,exports){(function(){module.exports=window["lodash"];}());}),"dsJ0":(function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,"store",function(){return build_module_store;});__webpack_require__.d(__webpack_exports__,"EntityProvider",function(){return EntityProvider;});__webpack_require__.d(__webpack_exports__,"useEntityId",function(){return useEntityId;});__webpack_require__.d(__webpack_exports__,"useEntityProp",function(){return useEntityProp;});__webpack_require__.d(__webpack_exports__,"useEntityBlockEditor",function(){return useEntityBlockEditor;});__webpack_require__.d(__webpack_exports__,"__experimentalFetchLinkSuggestions",function(){return _experimental_fetch_link_suggestions;});__webpack_require__.d(__webpack_exports__,"__experimentalFetchUrlData",function(){return _experimental_fetch_url_data;});var build_module_actions_namespaceObject={};__webpack_require__.r(build_module_actions_namespaceObject);__webpack_require__.d(build_module_actions_namespaceObject,"receiveUserQuery",function(){return receiveUserQuery;});__webpack_require__.d(build_module_actions_namespaceObject,"receiveCurrentUser",function(){return receiveCurrentUser;});__webpack_require__.d(build_module_actions_namespaceObject,"addEntities",function(){return addEntities;});__webpack_require__.d(build_module_actions_namespaceObject,"receiveEntityRecords",function(){return receiveEntityRecords;});__webpack_require__.d(build_module_actions_namespaceObject,"receiveCurrentTheme",function(){return receiveCurrentTheme;});__webpack_require__.d(build_module_actions_namespaceObject,"__experimentalReceiveCurrentGlobalStylesId",function(){return __experimentalReceiveCurrentGlobalStylesId;});__webpack_require__.d(build_module_actions_namespaceObject,"__experimentalReceiveThemeBaseGlobalStyles",function(){return __experimentalReceiveThemeBaseGlobalStyles;});__webpack_require__.d(build_module_actions_namespaceObject,"receiveThemeSupports",function(){return receiveThemeSupports;});__webpack_require__.d(build_module_actions_namespaceObject,"receiveEmbedPreview",function(){return receiveEmbedPreview;});__webpack_require__.d(build_module_actions_namespaceObject,"deleteEntityRecord",function(){return deleteEntityRecord;});__webpack_require__.d(build_module_actions_namespaceObject,"editEntityRecord",function(){return actions_editEntityRecord;});__webpack_require__.d(build_module_actions_namespaceObject,"undo",function(){return undo;});__webpack_require__.d(build_module_actions_namespaceObject,"redo",function(){return redo;});__webpack_require__.d(build_module_actions_namespaceObject,"__unstableCreateUndoLevel",function(){return actions_unstableCreateUndoLevel;});__webpack_require__.d(build_module_actions_namespaceObject,"saveEntityRecord",function(){return saveEntityRecord;});__webpack_require__.d(build_module_actions_namespaceObject,"__experimentalBatch",function(){return __experimentalBatch;});__webpack_require__.d(build_module_actions_namespaceObject,"saveEditedEntityRecord",function(){return saveEditedEntityRecord;});__webpack_require__.d(build_module_actions_namespaceObject,"__experimentalSaveSpecifiedEntityEdits",function(){return __experimentalSaveSpecifiedEntityEdits;});__webpack_require__.d(build_module_actions_namespaceObject,"receiveUploadPermissions",function(){return receiveUploadPermissions;});__webpack_require__.d(build_module_actions_namespaceObject,"receiveUserPermission",function(){return receiveUserPermission;});__webpack_require__.d(build_module_actions_namespaceObject,"receiveAutosaves",function(){return receiveAutosaves;});var build_module_selectors_namespaceObject={};__webpack_require__.r(build_module_selectors_namespaceObject);__webpack_require__.d(build_module_selectors_namespaceObject,"isRequestingEmbedPreview",function(){return isRequestingEmbedPreview;});__webpack_require__.d(build_module_selectors_namespaceObject,"getAuthors",function(){return getAuthors;});__webpack_require__.d(build_module_selectors_namespaceObject,"getCurrentUser",function(){return getCurrentUser;});__webpack_require__.d(build_module_selectors_namespaceObject,"getUserQueryResults",function(){return getUserQueryResults;});__webpack_require__.d(build_module_selectors_namespaceObject,"getEntitiesByKind",function(){return getEntitiesByKind;});__webpack_require__.d(build_module_selectors_namespaceObject,"getEntity",function(){return getEntity;});__webpack_require__.d(build_module_selectors_namespaceObject,"getEntityRecord",function(){return selectors_getEntityRecord;});__webpack_require__.d(build_module_selectors_namespaceObject,"__experimentalGetEntityRecordNoResolver",function(){return __experimentalGetEntityRecordNoResolver;});__webpack_require__.d(build_module_selectors_namespaceObject,"getRawEntityRecord",function(){return getRawEntityRecord;});__webpack_require__.d(build_module_selectors_namespaceObject,"hasEntityRecords",function(){return hasEntityRecords;});__webpack_require__.d(build_module_selectors_namespaceObject,"getEntityRecords",function(){return getEntityRecords;});__webpack_require__.d(build_module_selectors_namespaceObject,"__experimentalGetDirtyEntityRecords",function(){return __experimentalGetDirtyEntityRecords;});__webpack_require__.d(build_module_selectors_namespaceObject,"__experimentalGetEntitiesBeingSaved",function(){return __experimentalGetEntitiesBeingSaved;});__webpack_require__.d(build_module_selectors_namespaceObject,"getEntityRecordEdits",function(){return getEntityRecordEdits;});__webpack_require__.d(build_module_selectors_namespaceObject,"getEntityRecordNonTransientEdits",function(){return getEntityRecordNonTransientEdits;});__webpack_require__.d(build_module_selectors_namespaceObject,"hasEditsForEntityRecord",function(){return hasEditsForEntityRecord;});__webpack_require__.d(build_module_selectors_namespaceObject,"getEditedEntityRecord",function(){return selectors_getEditedEntityRecord;});__webpack_require__.d(build_module_selectors_namespaceObject,"isAutosavingEntityRecord",function(){return isAutosavingEntityRecord;});__webpack_require__.d(build_module_selectors_namespaceObject,"isSavingEntityRecord",function(){return isSavingEntityRecord;});__webpack_require__.d(build_module_selectors_namespaceObject,"isDeletingEntityRecord",function(){return isDeletingEntityRecord;});__webpack_require__.d(build_module_selectors_namespaceObject,"getLastEntitySaveError",function(){return getLastEntitySaveError;});__webpack_require__.d(build_module_selectors_namespaceObject,"getLastEntityDeleteError",function(){return getLastEntityDeleteError;});__webpack_require__.d(build_module_selectors_namespaceObject,"getUndoEdit",function(){return getUndoEdit;});__webpack_require__.d(build_module_selectors_namespaceObject,"getRedoEdit",function(){return getRedoEdit;});__webpack_require__.d(build_module_selectors_namespaceObject,"hasUndo",function(){return hasUndo;});__webpack_require__.d(build_module_selectors_namespaceObject,"hasRedo",function(){return hasRedo;});__webpack_require__.d(build_module_selectors_namespaceObject,"getCurrentTheme",function(){return getCurrentTheme;});__webpack_require__.d(build_module_selectors_namespaceObject,"__experimentalGetCurrentGlobalStylesId",function(){return __experimentalGetCurrentGlobalStylesId;});__webpack_require__.d(build_module_selectors_namespaceObject,"getThemeSupports",function(){return getThemeSupports;});__webpack_require__.d(build_module_selectors_namespaceObject,"getEmbedPreview",function(){return getEmbedPreview;});__webpack_require__.d(build_module_selectors_namespaceObject,"isPreviewEmbedFallback",function(){return isPreviewEmbedFallback;});__webpack_require__.d(build_module_selectors_namespaceObject,"canUser",function(){return canUser;});__webpack_require__.d(build_module_selectors_namespaceObject,"canUserEditEntityRecord",function(){return canUserEditEntityRecord;});__webpack_require__.d(build_module_selectors_namespaceObject,"getAutosaves",function(){return getAutosaves;});__webpack_require__.d(build_module_selectors_namespaceObject,"getAutosave",function(){return getAutosave;});__webpack_require__.d(build_module_selectors_namespaceObject,"hasFetchedAutosaves",function(){return hasFetchedAutosaves;});__webpack_require__.d(build_module_selectors_namespaceObject,"getReferenceByDistinctEdits",function(){return getReferenceByDistinctEdits;});__webpack_require__.d(build_module_selectors_namespaceObject,"__experimentalGetTemplateForLink",function(){return __experimentalGetTemplateForLink;});__webpack_require__.d(build_module_selectors_namespaceObject,"__experimentalGetCurrentThemeBaseGlobalStyles",function(){return __experimentalGetCurrentThemeBaseGlobalStyles;});var resolvers_namespaceObject={};__webpack_require__.r(resolvers_namespaceObject);__webpack_require__.d(resolvers_namespaceObject,"getAuthors",function(){return resolvers_getAuthors;});__webpack_require__.d(resolvers_namespaceObject,"getCurrentUser",function(){return resolvers_getCurrentUser;});__webpack_require__.d(resolvers_namespaceObject,"getEntityRecord",function(){return resolvers_getEntityRecord;});__webpack_require__.d(resolvers_namespaceObject,"getRawEntityRecord",function(){return resolvers_getRawEntityRecord;});__webpack_require__.d(resolvers_namespaceObject,"getEditedEntityRecord",function(){return resolvers_getEditedEntityRecord;});__webpack_require__.d(resolvers_namespaceObject,"getEntityRecords",function(){return resolvers_getEntityRecords;});__webpack_require__.d(resolvers_namespaceObject,"getCurrentTheme",function(){return resolvers_getCurrentTheme;});__webpack_require__.d(resolvers_namespaceObject,"getThemeSupports",function(){return resolvers_getThemeSupports;});__webpack_require__.d(resolvers_namespaceObject,"getEmbedPreview",function(){return resolvers_getEmbedPreview;});__webpack_require__.d(resolvers_namespaceObject,"canUser",function(){return resolvers_canUser;});__webpack_require__.d(resolvers_namespaceObject,"canUserEditEntityRecord",function(){return resolvers_canUserEditEntityRecord;});__webpack_require__.d(resolvers_namespaceObject,"getAutosaves",function(){return resolvers_getAutosaves;});__webpack_require__.d(resolvers_namespaceObject,"getAutosave",function(){return resolvers_getAutosave;});__webpack_require__.d(resolvers_namespaceObject,"__experimentalGetTemplateForLink",function(){return resolvers_experimentalGetTemplateForLink;});__webpack_require__.d(resolvers_namespaceObject,"__experimentalGetCurrentGlobalStylesId",function(){return resolvers_experimentalGetCurrentGlobalStylesId;});__webpack_require__.d(resolvers_namespaceObject,"__experimentalGetCurrentThemeBaseGlobalStyles",function(){return resolvers_experimentalGetCurrentThemeBaseGlobalStyles;});var external_wp_data_=__webpack_require__("1ZqX");var external_lodash_=__webpack_require__("YLtl");var external_wp_isShallowEqual_=__webpack_require__("rl8x");var external_wp_isShallowEqual_default=__webpack_require__.n(external_wp_isShallowEqual_);const ifMatchingAction=isMatch=>reducer=>(state,action)=>{if(state===undefined||isMatch(action)){return reducer(state,action);}
return state;};var if_matching_action=(ifMatchingAction);const replaceAction=replacer=>reducer=>(state,action)=>{return reducer(state,replacer(action));};var replace_action=(replaceAction);function conservativeMapItem(item,nextItem){if(!item){return nextItem;}
let hasChanges=false;const result={};for(const key in nextItem){if(Object(external_lodash_["isEqual"])(item[key],nextItem[key])){result[key]=item[key];}else{hasChanges=true;result[key]=nextItem[key];}}
if(!hasChanges){return item;}
for(const key in item){if(!result.hasOwnProperty(key)){result[key]=item[key];}}
return result;}
const onSubKey=actionProperty=>reducer=>function(){let state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};let action=arguments.length>1?arguments[1]:undefined;const key=action[actionProperty];if(key===undefined){return state;}
const nextKeyState=reducer(state[key],action);if(nextKeyState===state[key]){return state;}
return{...state,[key]:nextKeyState};};var on_sub_key=(onSubKey);var external_wp_apiFetch_=__webpack_require__("ywyh");var external_wp_apiFetch_default=__webpack_require__.n(external_wp_apiFetch_);var external_wp_i18n_=__webpack_require__("l3Sj");var v4=__webpack_require__("7Cbv");var external_wp_url_=__webpack_require__("Mmq9");var external_wp_deprecated_=__webpack_require__("NMb1");var external_wp_deprecated_default=__webpack_require__.n(external_wp_deprecated_);function receiveItems(items,edits){return{type:'RECEIVE_ITEMS',items:Object(external_lodash_["castArray"])(items),persistedEdits:edits};}
function removeItems(kind,name,records){let invalidateCache=arguments.length>3&&arguments[3]!==undefined?arguments[3]:false;return{type:'REMOVE_ITEMS',itemIds:Object(external_lodash_["castArray"])(records),kind,name,invalidateCache};}
function receiveQueriedItems(items){let query=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};let edits=arguments.length>2?arguments[2]:undefined;return{...receiveItems(items,edits),query};}
let maxItems=null;async function defaultProcessor(requests){if(maxItems===null){const preflightResponse=await external_wp_apiFetch_default()({path:'/batch/v1',method:'OPTIONS'});maxItems=preflightResponse.endpoints[0].args.requests.maxItems;}
const results=[];for(const batchRequests of Object(external_lodash_["chunk"])(requests,maxItems)){const batchResponse=await external_wp_apiFetch_default()({path:'/batch/v1',method:'POST',data:{validation:'require-all-validate',requests:batchRequests.map(request=>({path:request.path,body:request.data,method:request.method,headers:request.headers}))}});let batchResults;if(batchResponse.failed){batchResults=batchResponse.responses.map(response=>({error:response===null||response===void 0?void 0:response.body}));}else{batchResults=batchResponse.responses.map(response=>{const result={};if(response.status>=200&&response.status<300){result.output=response.body;}else{result.error=response.body;}
return result;});}
results.push(...batchResults);}
return results;}
function createBatch(){let processor=arguments.length>0&&arguments[0]!==undefined?arguments[0]:defaultProcessor;let lastId=0;let queue=[];const pending=new ObservableSet();return{add(inputOrThunk){const id=++lastId;pending.add(id);const add=input=>new Promise((resolve,reject)=>{queue.push({input,resolve,reject});pending.delete(id);});if(Object(external_lodash_["isFunction"])(inputOrThunk)){return Promise.resolve(inputOrThunk(add)).finally(()=>{pending.delete(id);});}
return add(inputOrThunk);},async run(){if(pending.size){await new Promise(resolve=>{const unsubscribe=pending.subscribe(()=>{if(!pending.size){unsubscribe();resolve();}});});}
let results;try{results=await processor(queue.map(_ref=>{let{input}=_ref;return input;}));if(results.length!==queue.length){throw new Error('run: Array returned by processor must be same size as input array.');}}catch(error){for(const{reject}of queue){reject(error);}
throw error;}
let isSuccess=true;for(const[result,{resolve,reject}]of Object(external_lodash_["zip"])(results,queue)){if(result!==null&&result!==void 0&&result.error){reject(result.error);isSuccess=false;}else{var _result$output;resolve((_result$output=result===null||result===void 0?void 0:result.output)!==null&&_result$output!==void 0?_result$output:result);}}
queue=[];return isSuccess;}};}
class ObservableSet{constructor(){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}
this.set=new Set(...args);this.subscribers=new Set();}
get size(){return this.set.size;}
add(){this.set.add(...arguments);this.subscribers.forEach(subscriber=>subscriber());return this;}
delete(){const isSuccess=this.set.delete(...arguments);this.subscribers.forEach(subscriber=>subscriber());return isSuccess;}
subscribe(subscriber){this.subscribers.add(subscriber);return()=>{this.subscribers.delete(subscriber);};}}
const STORE_NAME='core';function receiveUserQuery(queryID,users){return{type:'RECEIVE_USER_QUERY',users:Object(external_lodash_["castArray"])(users),queryID};}
function receiveCurrentUser(currentUser){return{type:'RECEIVE_CURRENT_USER',currentUser};}
function addEntities(entities){return{type:'ADD_ENTITIES',entities};}
function receiveEntityRecords(kind,name,records,query){let invalidateCache=arguments.length>4&&arguments[4]!==undefined?arguments[4]:false;let edits=arguments.length>5?arguments[5]:undefined;if(kind==='postType'){records=Object(external_lodash_["castArray"])(records).map(record=>record.status==='auto-draft'?{...record,title:''}:record);}
let action;if(query){action=receiveQueriedItems(records,query,edits);}else{action=receiveItems(records,edits);}
return{...action,kind,name,invalidateCache};}
function receiveCurrentTheme(currentTheme){return{type:'RECEIVE_CURRENT_THEME',currentTheme};}
function __experimentalReceiveCurrentGlobalStylesId(currentGlobalStylesId){return{type:'RECEIVE_CURRENT_GLOBAL_STYLES_ID',id:currentGlobalStylesId};}
function __experimentalReceiveThemeBaseGlobalStyles(stylesheet,globalStyles){return{type:'RECEIVE_THEME_GLOBAL_STYLES',stylesheet,globalStyles};}
function receiveThemeSupports(){external_wp_deprecated_default()("wp.data.dispatch( 'core' ).receiveThemeSupports",{since:'5.9'});return{type:'DO_NOTHING'};}
function receiveEmbedPreview(url,preview){return{type:'RECEIVE_EMBED_PREVIEW',url,preview};}
const deleteEntityRecord=function(kind,name,recordId,query){let{__unstableFetch=external_wp_apiFetch_default.a}=arguments.length>4&&arguments[4]!==undefined?arguments[4]:{};return async _ref=>{let{dispatch}=_ref;const entities=await dispatch(getKindEntities(kind));const entity=Object(external_lodash_["find"])(entities,{kind,name});let error;let deletedRecord=false;if(!entity||entity!==null&&entity!==void 0&&entity.__experimentalNoFetch){return;}
const lock=await dispatch.__unstableAcquireStoreLock(STORE_NAME,['entities','data',kind,name,recordId],{exclusive:true});try{dispatch({type:'DELETE_ENTITY_RECORD_START',kind,name,recordId});try{let path=`${entity.baseURL}/${recordId}`;if(query){path=Object(external_wp_url_["addQueryArgs"])(path,query);}
deletedRecord=await __unstableFetch({path,method:'DELETE'});await dispatch(removeItems(kind,name,recordId,true));}catch(_error){error=_error;}
dispatch({type:'DELETE_ENTITY_RECORD_FINISH',kind,name,recordId,error});return deletedRecord;}finally{dispatch.__unstableReleaseStoreLock(lock);}};};const actions_editEntityRecord=function(kind,name,recordId,edits){let options=arguments.length>4&&arguments[4]!==undefined?arguments[4]:{};return _ref2=>{let{select,dispatch}=_ref2;const entity=select.getEntity(kind,name);if(!entity){throw new Error(`The entity being edited (${kind}, ${name}) does not have a loaded config.`);}
const{transientEdits={},mergedEdits={}}=entity;const record=select.getRawEntityRecord(kind,name,recordId);const editedRecord=select.getEditedEntityRecord(kind,name,recordId);const edit={kind,name,recordId,edits:Object.keys(edits).reduce((acc,key)=>{const recordValue=record[key];const editedRecordValue=editedRecord[key];const value=mergedEdits[key]?{...editedRecordValue,...edits[key]}:edits[key];acc[key]=Object(external_lodash_["isEqual"])(recordValue,value)?undefined:value;return acc;},{}),transientEdits};dispatch({type:'EDIT_ENTITY_RECORD',...edit,meta:{undo:!options.undoIgnore&&{...edit,edits:Object.keys(edits).reduce((acc,key)=>{acc[key]=editedRecord[key];return acc;},{})}}});};};const undo=()=>_ref3=>{let{select,dispatch}=_ref3;const undoEdit=select.getUndoEdit();if(!undoEdit){return;}
dispatch({type:'EDIT_ENTITY_RECORD',...undoEdit,meta:{isUndo:true}});};const redo=()=>_ref4=>{let{select,dispatch}=_ref4;const redoEdit=select.getRedoEdit();if(!redoEdit){return;}
dispatch({type:'EDIT_ENTITY_RECORD',...redoEdit,meta:{isRedo:true}});};function actions_unstableCreateUndoLevel(){return{type:'CREATE_UNDO_LEVEL'};}
const saveEntityRecord=function(kind,name,record){let{isAutosave=false,__unstableFetch=external_wp_apiFetch_default.a}=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{};return async _ref5=>{let{select,resolveSelect,dispatch}=_ref5;const entities=await dispatch(getKindEntities(kind));const entity=Object(external_lodash_["find"])(entities,{kind,name});if(!entity||entity!==null&&entity!==void 0&&entity.__experimentalNoFetch){return;}
const entityIdKey=entity.key||DEFAULT_ENTITY_KEY;const recordId=record[entityIdKey];const lock=await dispatch.__unstableAcquireStoreLock(STORE_NAME,['entities','data',kind,name,recordId||Object(v4["a"])()],{exclusive:true});try{for(const[key,value]of Object.entries(record)){if(typeof value==='function'){const evaluatedValue=value(select.getEditedEntityRecord(kind,name,recordId));dispatch.editEntityRecord(kind,name,recordId,{[key]:evaluatedValue},{undoIgnore:true});record[key]=evaluatedValue;}}
dispatch({type:'SAVE_ENTITY_RECORD_START',kind,name,recordId,isAutosave});let updatedRecord;let error;try{const path=`${entity.baseURL}${recordId?'/'+recordId:''}`;const persistedRecord=select.getRawEntityRecord(kind,name,recordId);if(isAutosave){const currentUser=select.getCurrentUser();const currentUserId=currentUser?currentUser.id:undefined;const autosavePost=resolveSelect.getAutosave(persistedRecord.type,persistedRecord.id,currentUserId);let data={...persistedRecord,...autosavePost,...record};data=Object.keys(data).reduce((acc,key)=>{if(['title','excerpt','content'].includes(key)){acc[key]=data[key];}
return acc;},{status:data.status==='auto-draft'?'draft':data.status});updatedRecord=await __unstableFetch({path:`${path}/autosaves`,method:'POST',data});if(persistedRecord.id===updatedRecord.id){let newRecord={...persistedRecord,...data,...updatedRecord};newRecord=Object.keys(newRecord).reduce((acc,key)=>{if(['title','excerpt','content'].includes(key)){acc[key]=newRecord[key];}else if(key==='status'){acc[key]=persistedRecord.status==='auto-draft'&&newRecord.status==='draft'?newRecord.status:persistedRecord.status;}else{acc[key]=persistedRecord[key];}
return acc;},{});dispatch.receiveEntityRecords(kind,name,newRecord,undefined,true);}else{dispatch.receiveAutosaves(persistedRecord.id,updatedRecord);}}else{let edits=record;if(entity.__unstablePrePersist){edits={...edits,...entity.__unstablePrePersist(persistedRecord,edits)};}
updatedRecord=await __unstableFetch({path,method:recordId?'PUT':'POST',data:edits});dispatch.receiveEntityRecords(kind,name,updatedRecord,undefined,true,edits);}}catch(_error){error=_error;}
dispatch({type:'SAVE_ENTITY_RECORD_FINISH',kind,name,recordId,error,isAutosave});return updatedRecord;}finally{dispatch.__unstableReleaseStoreLock(lock);}};};const __experimentalBatch=requests=>async _ref6=>{let{dispatch}=_ref6;const batch=createBatch();const api={saveEntityRecord(kind,name,record,options){return batch.add(add=>dispatch.saveEntityRecord(kind,name,record,{...options,__unstableFetch:add}));},saveEditedEntityRecord(kind,name,recordId,options){return batch.add(add=>dispatch.saveEditedEntityRecord(kind,name,recordId,{...options,__unstableFetch:add}));},deleteEntityRecord(kind,name,recordId,query,options){return batch.add(add=>dispatch.deleteEntityRecord(kind,name,recordId,query,{...options,__unstableFetch:add}));}};const resultPromises=requests.map(request=>request(api));const[,...results]=await Promise.all([batch.run(),...resultPromises]);return results;};const saveEditedEntityRecord=(kind,name,recordId,options)=>async _ref7=>{let{select,dispatch}=_ref7;if(!select.hasEditsForEntityRecord(kind,name,recordId)){return;}
const entities=await dispatch(getKindEntities(kind));const entity=Object(external_lodash_["find"])(entities,{kind,name});if(!entity){return;}
const entityIdKey=entity.key||DEFAULT_ENTITY_KEY;const edits=select.getEntityRecordNonTransientEdits(kind,name,recordId);const record={[entityIdKey]:recordId,...edits};return await dispatch.saveEntityRecord(kind,name,record,options);};const __experimentalSaveSpecifiedEntityEdits=(kind,name,recordId,itemsToSave,options)=>async _ref8=>{let{select,dispatch}=_ref8;if(!select.hasEditsForEntityRecord(kind,name,recordId)){return;}
const edits=select.getEntityRecordNonTransientEdits(kind,name,recordId);const editsToSave={};for(const edit in edits){if(itemsToSave.some(item=>item===edit)){editsToSave[edit]=edits[edit];}}
return await dispatch.saveEntityRecord(kind,name,editsToSave,options);};function receiveUploadPermissions(hasUploadPermissions){return{type:'RECEIVE_USER_PERMISSION',key:'create/media',isAllowed:hasUploadPermissions};}
function receiveUserPermission(key,isAllowed){return{type:'RECEIVE_USER_PERMISSION',key,isAllowed};}
function receiveAutosaves(postId,autosaves){return{type:'RECEIVE_AUTOSAVES',postId,autosaves:Object(external_lodash_["castArray"])(autosaves)};}
const DEFAULT_ENTITY_KEY='id';const POST_RAW_ATTRIBUTES=['title','excerpt','content'];const defaultEntities=[{label:Object(external_wp_i18n_["__"])('Base'),name:'__unstableBase',kind:'root',baseURL:'/'},{label:Object(external_wp_i18n_["__"])('Site'),name:'site',kind:'root',baseURL:'/wp/v2/settings',getTitle:record=>{return Object(external_lodash_["get"])(record,['title'],Object(external_wp_i18n_["__"])('Site Title'));}},{label:Object(external_wp_i18n_["__"])('Post Type'),name:'postType',kind:'root',key:'slug',baseURL:'/wp/v2/types',baseURLParams:{context:'edit'},rawAttributes:POST_RAW_ATTRIBUTES},{name:'media',kind:'root',baseURL:'/wp/v2/media',baseURLParams:{context:'edit'},plural:'mediaItems',label:Object(external_wp_i18n_["__"])('Media')},{name:'taxonomy',kind:'root',key:'slug',baseURL:'/wp/v2/taxonomies',baseURLParams:{context:'edit'},plural:'taxonomies',label:Object(external_wp_i18n_["__"])('Taxonomy')},{name:'sidebar',kind:'root',baseURL:'/wp/v2/sidebars',plural:'sidebars',transientEdits:{blocks:true},label:Object(external_wp_i18n_["__"])('Widget areas')},{name:'widget',kind:'root',baseURL:'/wp/v2/widgets',baseURLParams:{context:'edit'},plural:'widgets',transientEdits:{blocks:true},label:Object(external_wp_i18n_["__"])('Widgets')},{name:'widgetType',kind:'root',baseURL:'/wp/v2/widget-types',baseURLParams:{context:'edit'},plural:'widgetTypes',label:Object(external_wp_i18n_["__"])('Widget types')},{label:Object(external_wp_i18n_["__"])('User'),name:'user',kind:'root',baseURL:'/wp/v2/users',baseURLParams:{context:'edit'},plural:'users'},{name:'comment',kind:'root',baseURL:'/wp/v2/comments',baseURLParams:{context:'edit'},plural:'comments',label:Object(external_wp_i18n_["__"])('Comment')},{name:'menu',kind:'root',baseURL:'/wp/v2/menus',baseURLParams:{context:'edit'},plural:'menus',label:Object(external_wp_i18n_["__"])('Menu')},{name:'menuItem',kind:'root',baseURL:'/wp/v2/menu-items',baseURLParams:{context:'edit'},plural:'menuItems',label:Object(external_wp_i18n_["__"])('Menu Item'),rawAttributes:['title','content']},{name:'menuLocation',kind:'root',baseURL:'/wp/v2/menu-locations',baseURLParams:{context:'edit'},plural:'menuLocations',label:Object(external_wp_i18n_["__"])('Menu Location'),key:'name'},{name:'navigationArea',kind:'root',baseURL:'/wp/v2/block-navigation-areas',baseURLParams:{context:'edit'},plural:'navigationAreas',label:Object(external_wp_i18n_["__"])('Navigation Area'),key:'name',getTitle:record=>record===null||record===void 0?void 0:record.description},{label:Object(external_wp_i18n_["__"])('Global Styles'),name:'globalStyles',kind:'root',baseURL:'/wp/v2/global-styles',baseURLParams:{context:'edit'},plural:'globalStylesVariations',getTitle:record=>{var _record$title;return(record===null||record===void 0?void 0:(_record$title=record.title)===null||_record$title===void 0?void 0:_record$title.rendered)||(record===null||record===void 0?void 0:record.title);}},{label:Object(external_wp_i18n_["__"])('Themes'),name:'theme',kind:'root',baseURL:'/wp/v2/themes',baseURLParams:{context:'edit'},key:'stylesheet'},{label:Object(external_wp_i18n_["__"])('Plugins'),name:'plugin',kind:'root',baseURL:'/wp/v2/plugins',baseURLParams:{context:'edit'},key:'plugin'}];const kinds=[{name:'postType',loadEntities:loadPostTypeEntities},{name:'taxonomy',loadEntities:loadTaxonomyEntities}];const prePersistPostType=(persistedRecord,edits)=>{const newEdits={};if((persistedRecord===null||persistedRecord===void 0?void 0:persistedRecord.status)==='auto-draft'){if(!edits.status&&!newEdits.status){newEdits.status='draft';}
if((!edits.title||edits.title==='Auto Draft')&&!newEdits.title&&(!(persistedRecord!==null&&persistedRecord!==void 0&&persistedRecord.title)||(persistedRecord===null||persistedRecord===void 0?void 0:persistedRecord.title)==='Auto Draft')){newEdits.title='';}}
return newEdits;};async function loadPostTypeEntities(){const postTypes=await external_wp_apiFetch_default()({path:'/wp/v2/types?context=edit'});return Object(external_lodash_["map"])(postTypes,(postType,name)=>{var _postType$rest_namesp;const isTemplate=['wp_template','wp_template_part'].includes(name);const namespace=(_postType$rest_namesp=postType===null||postType===void 0?void 0:postType.rest_namespace)!==null&&_postType$rest_namesp!==void 0?_postType$rest_namesp:'wp/v2';return{kind:'postType',baseURL:`/${namespace}/${postType.rest_base}`,baseURLParams:{context:'edit'},name,label:postType.labels.singular_name,transientEdits:{blocks:true,selection:true},mergedEdits:{meta:true},rawAttributes:POST_RAW_ATTRIBUTES,getTitle:record=>{var _record$title2;return(record===null||record===void 0?void 0:(_record$title2=record.title)===null||_record$title2===void 0?void 0:_record$title2.rendered)||(record===null||record===void 0?void 0:record.title)||(isTemplate?Object(external_lodash_["startCase"])(record.slug):String(record.id));},__unstablePrePersist:isTemplate?undefined:prePersistPostType,__unstable_rest_base:postType.rest_base};});}
async function loadTaxonomyEntities(){const taxonomies=await external_wp_apiFetch_default()({path:'/wp/v2/taxonomies?context=edit'});return Object(external_lodash_["map"])(taxonomies,(taxonomy,name)=>{var _taxonomy$rest_namesp;const namespace=(_taxonomy$rest_namesp=taxonomy===null||taxonomy===void 0?void 0:taxonomy.rest_namespace)!==null&&_taxonomy$rest_namesp!==void 0?_taxonomy$rest_namesp:'wp/v2';return{kind:'taxonomy',baseURL:`/${namespace}/${taxonomy.rest_base}`,baseURLParams:{context:'edit'},name,label:taxonomy.labels.singular_name};});}
const getMethodName=function(kind,name){let prefix=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'get';let usePlural=arguments.length>3&&arguments[3]!==undefined?arguments[3]:false;const entity=Object(external_lodash_["find"])(defaultEntities,{kind,name});const kindPrefix=kind==='root'?'':Object(external_lodash_["upperFirst"])(Object(external_lodash_["camelCase"])(kind));const nameSuffix=Object(external_lodash_["upperFirst"])(Object(external_lodash_["camelCase"])(name))+(usePlural?'s':'');const suffix=usePlural&&entity.plural?Object(external_lodash_["upperFirst"])(Object(external_lodash_["camelCase"])(entity.plural)):nameSuffix;return `${prefix}${kindPrefix}${suffix}`;};const getKindEntities=kind=>async _ref=>{let{select,dispatch}=_ref;let entities=select.getEntitiesByKind(kind);if(entities&&entities.length!==0){return entities;}
const kindConfig=Object(external_lodash_["find"])(kinds,{name:kind});if(!kindConfig){return[];}
entities=await kindConfig.loadEntities();dispatch(addEntities(entities));return entities;};function getNormalizedCommaSeparable(value){if(typeof value==='string'){return value.split(',');}else if(Array.isArray(value)){return value;}
return null;}
var get_normalized_comma_separable=(getNormalizedCommaSeparable);function withWeakMapCache(fn){const cache=new WeakMap();return key=>{let value;if(cache.has(key)){value=cache.get(key);}else{value=fn(key);if(Object(external_lodash_["isObjectLike"])(key)){cache.set(key,value);}}
return value;};}
var with_weak_map_cache=(withWeakMapCache);function getQueryParts(query){const parts={stableKey:'',page:1,perPage:10,fields:null,include:null,context:'default'};const keys=Object.keys(query).sort();for(let i=0;i<keys.length;i++){const key=keys[i];let value=query[key];switch(key){case 'page':parts[key]=Number(value);break;case 'per_page':parts.perPage=Number(value);break;case 'context':parts.context=value;break;default:if(key==='_fields'){parts.fields=get_normalized_comma_separable(value);value=parts.fields.join();}
if(key==='include'){parts.include=get_normalized_comma_separable(value).map(Number);value=parts.include.join();}
parts.stableKey+=(parts.stableKey?'&':'')+Object(external_wp_url_["addQueryArgs"])('',{[key]:value}).slice(1);}}
return parts;}
var get_query_parts=(with_weak_map_cache(getQueryParts));function getContextFromAction(action){const{query}=action;if(!query){return 'default';}
const queryParts=get_query_parts(query);return queryParts.context;}
function getMergedItemIds(itemIds,nextItemIds,page,perPage){const receivedAllIds=page===1&&perPage===-1;if(receivedAllIds){return nextItemIds;}
const nextItemIdsStartIndex=(page-1)*perPage;const size=Math.max(itemIds.length,nextItemIdsStartIndex+nextItemIds.length);const mergedItemIds=new Array(size);for(let i=0;i<size;i++){const isInNextItemsRange=i>=nextItemIdsStartIndex&&i<nextItemIdsStartIndex+nextItemIds.length;mergedItemIds[i]=isInNextItemsRange?nextItemIds[i-nextItemIdsStartIndex]:itemIds[i];}
return mergedItemIds;}
function reducer_items(){let state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};let action=arguments.length>1?arguments[1]:undefined;switch(action.type){case 'RECEIVE_ITEMS':{const context=getContextFromAction(action);const key=action.key||DEFAULT_ENTITY_KEY;return{...state,[context]:{...state[context],...action.items.reduce((accumulator,value)=>{var _state$context;const itemId=value[key];accumulator[itemId]=conservativeMapItem(state===null||state===void 0?void 0:(_state$context=state[context])===null||_state$context===void 0?void 0:_state$context[itemId],value);return accumulator;},{})}};}
case 'REMOVE_ITEMS':return Object(external_lodash_["mapValues"])(state,contextState=>Object(external_lodash_["omit"])(contextState,action.itemIds));}
return state;}
function itemIsComplete(){let state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};let action=arguments.length>1?arguments[1]:undefined;switch(action.type){case 'RECEIVE_ITEMS':{const context=getContextFromAction(action);const{query,key=DEFAULT_ENTITY_KEY}=action;const queryParts=query?get_query_parts(query):{};const isCompleteQuery=!query||!Array.isArray(queryParts.fields);return{...state,[context]:{...state[context],...action.items.reduce((result,item)=>{var _state$context2;const itemId=item[key];result[itemId]=(state===null||state===void 0?void 0:(_state$context2=state[context])===null||_state$context2===void 0?void 0:_state$context2[itemId])||isCompleteQuery;return result;},{})}};}
case 'REMOVE_ITEMS':return Object(external_lodash_["mapValues"])(state,contextState=>Object(external_lodash_["omit"])(contextState,action.itemIds));}
return state;}
const receiveQueries=Object(external_lodash_["flowRight"])([if_matching_action(action=>'query'in action),replace_action(action=>{if(action.query){return{...action,...get_query_parts(action.query)};}
return action;}),on_sub_key('context'),on_sub_key('stableKey')])(function(){let state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;let action=arguments.length>1?arguments[1]:undefined;const{type,page,perPage,key=DEFAULT_ENTITY_KEY}=action;if(type!=='RECEIVE_ITEMS'){return state;}
return getMergedItemIds(state||[],Object(external_lodash_["map"])(action.items,key),page,perPage);});const reducer_queries=function(){let state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};let action=arguments.length>1?arguments[1]:undefined;switch(action.type){case 'RECEIVE_ITEMS':return receiveQueries(state,action);case 'REMOVE_ITEMS':const removedItems=action.itemIds.reduce((result,itemId)=>{result[itemId]=true;return result;},{});return Object(external_lodash_["mapValues"])(state,contextQueries=>{return Object(external_lodash_["mapValues"])(contextQueries,queryItems=>{return Object(external_lodash_["filter"])(queryItems,queryId=>{return!removedItems[queryId];});});});default:return state;}};var reducer=(Object(external_wp_data_["combineReducers"])({items:reducer_items,itemIsComplete,queries:reducer_queries}));function terms(){let state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};let action=arguments.length>1?arguments[1]:undefined;switch(action.type){case 'RECEIVE_TERMS':return{...state,[action.taxonomy]:action.terms};}
return state;}
function reducer_users(){let state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{byId:{},queries:{}};let action=arguments.length>1?arguments[1]:undefined;switch(action.type){case 'RECEIVE_USER_QUERY':return{byId:{...state.byId,...Object(external_lodash_["keyBy"])(action.users,'id')},queries:{...state.queries,[action.queryID]:Object(external_lodash_["map"])(action.users,user=>user.id)}};}
return state;}
function reducer_currentUser(){let state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};let action=arguments.length>1?arguments[1]:undefined;switch(action.type){case 'RECEIVE_CURRENT_USER':return action.currentUser;}
return state;}
function reducer_taxonomies(){let state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];let action=arguments.length>1?arguments[1]:undefined;switch(action.type){case 'RECEIVE_TAXONOMIES':return action.taxonomies;}
return state;}
function reducer_currentTheme(){let state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:undefined;let action=arguments.length>1?arguments[1]:undefined;switch(action.type){case 'RECEIVE_CURRENT_THEME':return action.currentTheme.stylesheet;}
return state;}
function currentGlobalStylesId(){let state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:undefined;let action=arguments.length>1?arguments[1]:undefined;switch(action.type){case 'RECEIVE_CURRENT_GLOBAL_STYLES_ID':return action.id;}
return state;}
function themeBaseGlobalStyles(){let state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};let action=arguments.length>1?arguments[1]:undefined;switch(action.type){case 'RECEIVE_THEME_GLOBAL_STYLES':return{...state,[action.stylesheet]:action.globalStyles};}
return state;}
function reducer_entity(entityConfig){return Object(external_lodash_["flowRight"])([if_matching_action(action=>action.name&&action.kind&&action.name===entityConfig.name&&action.kind===entityConfig.kind),replace_action(action=>{return{...action,key:entityConfig.key||DEFAULT_ENTITY_KEY};})])(Object(external_wp_data_["combineReducers"])({queriedData:reducer,edits:function(){var _action$query$context,_action$query;let state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};let action=arguments.length>1?arguments[1]:undefined;switch(action.type){case 'RECEIVE_ITEMS':const context=(_action$query$context=action===null||action===void 0?void 0:(_action$query=action.query)===null||_action$query===void 0?void 0:_action$query.context)!==null&&_action$query$context!==void 0?_action$query$context:'default';if(context!=='default'){return state;}
const nextState={...state};for(const record of action.items){const recordId=record[action.key];const edits=nextState[recordId];if(!edits){continue;}
const nextEdits=Object.keys(edits).reduce((acc,key)=>{if(!Object(external_lodash_["isEqual"])(edits[key],Object(external_lodash_["get"])(record[key],'raw',record[key]))&&(!action.persistedEdits||!Object(external_lodash_["isEqual"])(edits[key],action.persistedEdits[key]))){acc[key]=edits[key];}
return acc;},{});if(Object.keys(nextEdits).length){nextState[recordId]=nextEdits;}else{delete nextState[recordId];}}
return nextState;case 'EDIT_ENTITY_RECORD':const nextEdits={...state[action.recordId],...action.edits};Object.keys(nextEdits).forEach(key=>{if(nextEdits[key]===undefined){delete nextEdits[key];}});return{...state,[action.recordId]:nextEdits};}
return state;},saving:function(){let state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};let action=arguments.length>1?arguments[1]:undefined;switch(action.type){case 'SAVE_ENTITY_RECORD_START':case 'SAVE_ENTITY_RECORD_FINISH':return{...state,[action.recordId]:{pending:action.type==='SAVE_ENTITY_RECORD_START',error:action.error,isAutosave:action.isAutosave}};}
return state;},deleting:function(){let state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};let action=arguments.length>1?arguments[1]:undefined;switch(action.type){case 'DELETE_ENTITY_RECORD_START':case 'DELETE_ENTITY_RECORD_FINISH':return{...state,[action.recordId]:{pending:action.type==='DELETE_ENTITY_RECORD_START',error:action.error}};}
return state;}}));}
function entitiesConfig(){let state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:defaultEntities;let action=arguments.length>1?arguments[1]:undefined;switch(action.type){case 'ADD_ENTITIES':return[...state,...action.entities];}
return state;}
const reducer_entities=function(){let state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};let action=arguments.length>1?arguments[1]:undefined;const newConfig=entitiesConfig(state.config,action);let entitiesDataReducer=state.reducer;if(!entitiesDataReducer||newConfig!==state.config){const entitiesByKind=Object(external_lodash_["groupBy"])(newConfig,'kind');entitiesDataReducer=Object(external_wp_data_["combineReducers"])(Object.entries(entitiesByKind).reduce((memo,_ref)=>{let[kind,subEntities]=_ref;const kindReducer=Object(external_wp_data_["combineReducers"])(subEntities.reduce((kindMemo,entityConfig)=>({...kindMemo,[entityConfig.name]:reducer_entity(entityConfig)}),{}));memo[kind]=kindReducer;return memo;},{}));}
const newData=entitiesDataReducer(state.data,action);if(newData===state.data&&newConfig===state.config&&entitiesDataReducer===state.reducer){return state;}
return{reducer:entitiesDataReducer,data:newData,config:newConfig};};const UNDO_INITIAL_STATE=[];UNDO_INITIAL_STATE.offset=0;let lastEditAction;function reducer_undo(){let state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:UNDO_INITIAL_STATE;let action=arguments.length>1?arguments[1]:undefined;switch(action.type){case 'EDIT_ENTITY_RECORD':case 'CREATE_UNDO_LEVEL':let isCreateUndoLevel=action.type==='CREATE_UNDO_LEVEL';const isUndoOrRedo=!isCreateUndoLevel&&(action.meta.isUndo||action.meta.isRedo);if(isCreateUndoLevel){action=lastEditAction;}else if(!isUndoOrRedo){if(Object.keys(action.edits).some(key=>!action.transientEdits[key])){lastEditAction=action;}else{lastEditAction={...action,edits:{...(lastEditAction&&lastEditAction.edits),...action.edits}};}}
let nextState;if(isUndoOrRedo){nextState=[...state];nextState.offset=state.offset+(action.meta.isUndo?-1:1);if(state.flattenedUndo){isCreateUndoLevel=true;if(!lastEditAction.meta.undo){lastEditAction.meta.undo={edits:{}};}
action=lastEditAction;}else{return nextState;}}
if(!action.meta.undo){return state;}
if(!isCreateUndoLevel&&!Object.keys(action.edits).some(key=>!action.transientEdits[key])){nextState=[...state];nextState.flattenedUndo={...state.flattenedUndo,...action.edits};nextState.offset=state.offset;return nextState;}
nextState=nextState||state.slice(0,state.offset||undefined);nextState.offset=nextState.offset||0;nextState.pop();if(!isCreateUndoLevel){nextState.push({kind:action.meta.undo.kind,name:action.meta.undo.name,recordId:action.meta.undo.recordId,edits:{...state.flattenedUndo,...action.meta.undo.edits}});}
const comparisonUndoEdits=Object.values(action.meta.undo.edits).filter(edit=>typeof edit!=='function');const comparisonEdits=Object.values(action.edits).filter(edit=>typeof edit!=='function');if(!external_wp_isShallowEqual_default()(comparisonUndoEdits,comparisonEdits)){nextState.push({kind:action.kind,name:action.name,recordId:action.recordId,edits:isCreateUndoLevel?{...state.flattenedUndo,...action.edits}:action.edits});}
return nextState;}
return state;}
function embedPreviews(){let state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};let action=arguments.length>1?arguments[1]:undefined;switch(action.type){case 'RECEIVE_EMBED_PREVIEW':const{url,preview}=action;return{...state,[url]:preview};}
return state;}
function userPermissions(){let state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};let action=arguments.length>1?arguments[1]:undefined;switch(action.type){case 'RECEIVE_USER_PERMISSION':return{...state,[action.key]:action.isAllowed};}
return state;}
function reducer_autosaves(){let state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};let action=arguments.length>1?arguments[1]:undefined;switch(action.type){case 'RECEIVE_AUTOSAVES':const{postId,autosaves:autosavesData}=action;return{...state,[postId]:autosavesData};}
return state;}
var build_module_reducer=(Object(external_wp_data_["combineReducers"])({terms,users:reducer_users,currentTheme:reducer_currentTheme,currentGlobalStylesId,currentUser:reducer_currentUser,themeBaseGlobalStyles,taxonomies:reducer_taxonomies,entities:reducer_entities,undo:reducer_undo,embedPreviews,userPermissions,autosaves:reducer_autosaves}));var rememo=__webpack_require__("pPDe");var equivalent_key_map=__webpack_require__("FtRg");var equivalent_key_map_default=__webpack_require__.n(equivalent_key_map);const queriedItemsCacheByState=new WeakMap();function getQueriedItemsUncached(state,query){var _state$queries,_state$queries$contex;const{stableKey,page,perPage,include,fields,context}=get_query_parts(query);let itemIds;if((_state$queries=state.queries)!==null&&_state$queries!==void 0&&(_state$queries$contex=_state$queries[context])!==null&&_state$queries$contex!==void 0&&_state$queries$contex[stableKey]){itemIds=state.queries[context][stableKey];}
if(!itemIds){return null;}
const startOffset=perPage===-1?0:(page-1)*perPage;const endOffset=perPage===-1?itemIds.length:Math.min(startOffset+perPage,itemIds.length);const items=[];for(let i=startOffset;i<endOffset;i++){var _state$items$context;const itemId=itemIds[i];if(Array.isArray(include)&&!include.includes(itemId)){continue;}
if(!((_state$items$context=state.items[context])!==null&&_state$items$context!==void 0&&_state$items$context.hasOwnProperty(itemId))){return null;}
const item=state.items[context][itemId];let filteredItem;if(Array.isArray(fields)){filteredItem={};for(let f=0;f<fields.length;f++){const field=fields[f].split('.');const value=Object(external_lodash_["get"])(item,field);Object(external_lodash_["set"])(filteredItem,field,value);}}else{var _state$itemIsComplete;if(!((_state$itemIsComplete=state.itemIsComplete[context])!==null&&_state$itemIsComplete!==void 0&&_state$itemIsComplete[itemId])){return null;}
filteredItem=item;}
items.push(filteredItem);}
return items;}
const getQueriedItems=Object(rememo["a"])(function(state){let query=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};let queriedItemsCache=queriedItemsCacheByState.get(state);if(queriedItemsCache){const queriedItems=queriedItemsCache.get(query);if(queriedItems!==undefined){return queriedItems;}}else{queriedItemsCache=new equivalent_key_map_default.a();queriedItemsCacheByState.set(state,queriedItemsCache);}
const items=getQueriedItemsUncached(state,query);queriedItemsCache.set(query,items);return items;});function isRawAttribute(entity,attribute){return(entity.rawAttributes||[]).includes(attribute);}
const EMPTY_OBJECT={};const EMPTY_ARRAY=[];const isRequestingEmbedPreview=Object(external_wp_data_["createRegistrySelector"])(select=>(state,url)=>{return select(STORE_NAME).isResolving('getEmbedPreview',[url]);});function getAuthors(state,query){external_wp_deprecated_default()("select( 'core' ).getAuthors()",{since:'5.9',alternative:"select( 'core' ).getUsers({ who: 'authors' })"});const path=Object(external_wp_url_["addQueryArgs"])('/wp/v2/users/?who=authors&per_page=100',query);return getUserQueryResults(state,path);}
function getCurrentUser(state){return state.currentUser;}
const getUserQueryResults=Object(rememo["a"])((state,queryID)=>{const queryResults=state.users.queries[queryID];return Object(external_lodash_["map"])(queryResults,id=>state.users.byId[id]);},(state,queryID)=>[state.users.queries[queryID],state.users.byId]);function getEntitiesByKind(state,kind){return Object(external_lodash_["filter"])(state.entities.config,{kind});}
function getEntity(state,kind,name){return Object(external_lodash_["find"])(state.entities.config,{kind,name});}
const selectors_getEntityRecord=Object(rememo["a"])((state,kind,name,key,query)=>{var _query$context,_queriedState$items$c;const queriedState=Object(external_lodash_["get"])(state.entities.data,[kind,name,'queriedData']);if(!queriedState){return undefined;}
const context=(_query$context=query===null||query===void 0?void 0:query.context)!==null&&_query$context!==void 0?_query$context:'default';if(query===undefined){var _queriedState$itemIsC;if(!((_queriedState$itemIsC=queriedState.itemIsComplete[context])!==null&&_queriedState$itemIsC!==void 0&&_queriedState$itemIsC[key])){return undefined;}
return queriedState.items[context][key];}
const item=(_queriedState$items$c=queriedState.items[context])===null||_queriedState$items$c===void 0?void 0:_queriedState$items$c[key];if(item&&query._fields){const filteredItem={};const fields=get_normalized_comma_separable(query._fields);for(let f=0;f<fields.length;f++){const field=fields[f].split('.');const value=Object(external_lodash_["get"])(item,field);Object(external_lodash_["set"])(filteredItem,field,value);}
return filteredItem;}
return item;},(state,kind,name,recordId,query)=>{var _query$context2;const context=(_query$context2=query===null||query===void 0?void 0:query.context)!==null&&_query$context2!==void 0?_query$context2:'default';return[Object(external_lodash_["get"])(state.entities.data,[kind,name,'queriedData','items',context,recordId]),Object(external_lodash_["get"])(state.entities.data,[kind,name,'queriedData','itemIsComplete',context,recordId])];});function __experimentalGetEntityRecordNoResolver(state,kind,name,key){return selectors_getEntityRecord(state,kind,name,key);}
const getRawEntityRecord=Object(rememo["a"])((state,kind,name,key)=>{const record=selectors_getEntityRecord(state,kind,name,key);return record&&Object.keys(record).reduce((accumulator,_key)=>{if(isRawAttribute(getEntity(state,kind,name),_key)){accumulator[_key]=Object(external_lodash_["get"])(record[_key],'raw',record[_key]);}else{accumulator[_key]=record[_key];}
return accumulator;},{});},(state,kind,name,recordId,query)=>{var _query$context3;const context=(_query$context3=query===null||query===void 0?void 0:query.context)!==null&&_query$context3!==void 0?_query$context3:'default';return[state.entities.config,Object(external_lodash_["get"])(state.entities.data,[kind,name,'queriedData','items',context,recordId]),Object(external_lodash_["get"])(state.entities.data,[kind,name,'queriedData','itemIsComplete',context,recordId])];});function hasEntityRecords(state,kind,name,query){return Array.isArray(getEntityRecords(state,kind,name,query));}
function getEntityRecords(state,kind,name,query){const queriedState=Object(external_lodash_["get"])(state.entities.data,[kind,name,'queriedData']);if(!queriedState){return EMPTY_ARRAY;}
return getQueriedItems(queriedState,query);}
const __experimentalGetDirtyEntityRecords=Object(rememo["a"])(state=>{const{entities:{data}}=state;const dirtyRecords=[];Object.keys(data).forEach(kind=>{Object.keys(data[kind]).forEach(name=>{const primaryKeys=Object.keys(data[kind][name].edits).filter(primaryKey=>selectors_getEntityRecord(state,kind,name,primaryKey)&&hasEditsForEntityRecord(state,kind,name,primaryKey));if(primaryKeys.length){const entity=getEntity(state,kind,name);primaryKeys.forEach(primaryKey=>{var _entity$getTitle;const entityRecord=selectors_getEditedEntityRecord(state,kind,name,primaryKey);dirtyRecords.push({key:entityRecord[entity.key||DEFAULT_ENTITY_KEY],title:(entity===null||entity===void 0?void 0:(_entity$getTitle=entity.getTitle)===null||_entity$getTitle===void 0?void 0:_entity$getTitle.call(entity,entityRecord))||'',name,kind});});}});});return dirtyRecords;},state=>[state.entities.data]);const __experimentalGetEntitiesBeingSaved=Object(rememo["a"])(state=>{const{entities:{data}}=state;const recordsBeingSaved=[];Object.keys(data).forEach(kind=>{Object.keys(data[kind]).forEach(name=>{const primaryKeys=Object.keys(data[kind][name].saving).filter(primaryKey=>isSavingEntityRecord(state,kind,name,primaryKey));if(primaryKeys.length){const entity=getEntity(state,kind,name);primaryKeys.forEach(primaryKey=>{var _entity$getTitle2;const entityRecord=selectors_getEditedEntityRecord(state,kind,name,primaryKey);recordsBeingSaved.push({key:entityRecord[entity.key||DEFAULT_ENTITY_KEY],title:(entity===null||entity===void 0?void 0:(_entity$getTitle2=entity.getTitle)===null||_entity$getTitle2===void 0?void 0:_entity$getTitle2.call(entity,entityRecord))||'',name,kind});});}});});return recordsBeingSaved;},state=>[state.entities.data]);function getEntityRecordEdits(state,kind,name,recordId){return Object(external_lodash_["get"])(state.entities.data,[kind,name,'edits',recordId]);}
const getEntityRecordNonTransientEdits=Object(rememo["a"])((state,kind,name,recordId)=>{const{transientEdits}=getEntity(state,kind,name)||{};const edits=getEntityRecordEdits(state,kind,name,recordId)||{};if(!transientEdits){return edits;}
return Object.keys(edits).reduce((acc,key)=>{if(!transientEdits[key]){acc[key]=edits[key];}
return acc;},{});},(state,kind,name,recordId)=>[state.entities.config,Object(external_lodash_["get"])(state.entities.data,[kind,name,'edits',recordId])]);function hasEditsForEntityRecord(state,kind,name,recordId){return isSavingEntityRecord(state,kind,name,recordId)||Object.keys(getEntityRecordNonTransientEdits(state,kind,name,recordId)).length>0;}
const selectors_getEditedEntityRecord=Object(rememo["a"])((state,kind,name,recordId)=>({...getRawEntityRecord(state,kind,name,recordId),...getEntityRecordEdits(state,kind,name,recordId)}),(state,kind,name,recordId,query)=>{var _query$context4;const context=(_query$context4=query===null||query===void 0?void 0:query.context)!==null&&_query$context4!==void 0?_query$context4:'default';return[state.entities.config,Object(external_lodash_["get"])(state.entities.data,[kind,name,'queriedData','items',context,recordId]),Object(external_lodash_["get"])(state.entities.data,[kind,name,'queriedData','itemIsComplete',context,recordId]),Object(external_lodash_["get"])(state.entities.data,[kind,name,'edits',recordId])];});function isAutosavingEntityRecord(state,kind,name,recordId){const{pending,isAutosave}=Object(external_lodash_["get"])(state.entities.data,[kind,name,'saving',recordId],{});return Boolean(pending&&isAutosave);}
function isSavingEntityRecord(state,kind,name,recordId){return Object(external_lodash_["get"])(state.entities.data,[kind,name,'saving',recordId,'pending'],false);}
function isDeletingEntityRecord(state,kind,name,recordId){return Object(external_lodash_["get"])(state.entities.data,[kind,name,'deleting',recordId,'pending'],false);}
function getLastEntitySaveError(state,kind,name,recordId){return Object(external_lodash_["get"])(state.entities.data,[kind,name,'saving',recordId,'error']);}
function getLastEntityDeleteError(state,kind,name,recordId){return Object(external_lodash_["get"])(state.entities.data,[kind,name,'deleting',recordId,'error']);}
function getCurrentUndoOffset(state){return state.undo.offset;}
function getUndoEdit(state){return state.undo[state.undo.length-2+getCurrentUndoOffset(state)];}
function getRedoEdit(state){return state.undo[state.undo.length+getCurrentUndoOffset(state)];}
function hasUndo(state){return Boolean(getUndoEdit(state));}
function hasRedo(state){return Boolean(getRedoEdit(state));}
function getCurrentTheme(state){return selectors_getEntityRecord(state,'root','theme',state.currentTheme);}
function __experimentalGetCurrentGlobalStylesId(state){return state.currentGlobalStylesId;}
function getThemeSupports(state){var _getCurrentTheme$them,_getCurrentTheme;return(_getCurrentTheme$them=(_getCurrentTheme=getCurrentTheme(state))===null||_getCurrentTheme===void 0?void 0:_getCurrentTheme.theme_supports)!==null&&_getCurrentTheme$them!==void 0?_getCurrentTheme$them:EMPTY_OBJECT;}
function getEmbedPreview(state,url){return state.embedPreviews[url];}
function isPreviewEmbedFallback(state,url){const preview=state.embedPreviews[url];const oEmbedLinkCheck='<a href="'+url+'">'+url+'</a>';if(!preview){return false;}
return preview.html===oEmbedLinkCheck;}
function canUser(state,action,resource,id){const key=Object(external_lodash_["compact"])([action,resource,id]).join('/');return Object(external_lodash_["get"])(state,['userPermissions',key]);}
function canUserEditEntityRecord(state,kind,name,recordId){const entity=getEntity(state,kind,name);if(!entity){return false;}
const resource=entity.__unstable_rest_base;return canUser(state,'update',resource,recordId);}
function getAutosaves(state,postType,postId){return state.autosaves[postId];}
function getAutosave(state,postType,postId,authorId){if(authorId===undefined){return;}
const autosaves=state.autosaves[postId];return Object(external_lodash_["find"])(autosaves,{author:authorId});}
const hasFetchedAutosaves=Object(external_wp_data_["createRegistrySelector"])(select=>(state,postType,postId)=>{return select(STORE_NAME).hasFinishedResolution('getAutosaves',[postType,postId]);});const getReferenceByDistinctEdits=Object(rememo["a"])(()=>[],state=>[state.undo.length,state.undo.offset,state.undo.flattenedUndo]);function __experimentalGetTemplateForLink(state,link){const records=getEntityRecords(state,'postType','wp_template',{'find-template':link});const template=records!==null&&records!==void 0&&records.length?records[0]:null;if(template){return selectors_getEditedEntityRecord(state,'postType','wp_template',template.id);}
return template;}
function __experimentalGetCurrentThemeBaseGlobalStyles(state){const currentTheme=getCurrentTheme(state);if(!currentTheme){return null;}
return state.themeBaseGlobalStyles[currentTheme.stylesheet];}
const forwardResolver=resolverName=>function(){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}
return async _ref=>{let{resolveSelect}=_ref;await resolveSelect[resolverName](...args);};};var forward_resolver=(forwardResolver);const resolvers_getAuthors=query=>async _ref=>{let{dispatch}=_ref;const path=Object(external_wp_url_["addQueryArgs"])('/wp/v2/users/?who=authors&per_page=100',query);const users=await external_wp_apiFetch_default()({path});dispatch.receiveUserQuery(path,users);};const resolvers_getCurrentUser=()=>async _ref2=>{let{dispatch}=_ref2;const currentUser=await external_wp_apiFetch_default()({path:'/wp/v2/users/me'});dispatch.receiveCurrentUser(currentUser);};const resolvers_getEntityRecord=function(kind,name){let key=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'';let query=arguments.length>3?arguments[3]:undefined;return async _ref3=>{let{select,dispatch}=_ref3;const entities=await dispatch(getKindEntities(kind));const entity=Object(external_lodash_["find"])(entities,{kind,name});if(!entity||entity!==null&&entity!==void 0&&entity.__experimentalNoFetch){return;}
const lock=await dispatch.__unstableAcquireStoreLock(STORE_NAME,['entities','data',kind,name,key],{exclusive:false});try{if(query!==undefined&&query._fields){query={...query,_fields:Object(external_lodash_["uniq"])([...(get_normalized_comma_separable(query._fields)||[]),entity.key||DEFAULT_ENTITY_KEY]).join()};}
const path=Object(external_wp_url_["addQueryArgs"])(entity.baseURL+(key?'/'+key:''),{...entity.baseURLParams,...query});if(query!==undefined){query={...query,include:[key]};const hasRecords=select.hasEntityRecords(kind,name,query);if(hasRecords){return;}}
const record=await external_wp_apiFetch_default()({path});dispatch.receiveEntityRecords(kind,name,record,query);}catch(error){}finally{dispatch.__unstableReleaseStoreLock(lock);}};};const resolvers_getRawEntityRecord=forward_resolver('getEntityRecord');const resolvers_getEditedEntityRecord=forward_resolver('getEntityRecord');const resolvers_getEntityRecords=function(kind,name){let query=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};return async _ref4=>{let{dispatch}=_ref4;const entities=await dispatch(getKindEntities(kind));const entity=Object(external_lodash_["find"])(entities,{kind,name});if(!entity||entity!==null&&entity!==void 0&&entity.__experimentalNoFetch){return;}
const lock=await dispatch.__unstableAcquireStoreLock(STORE_NAME,['entities','data',kind,name],{exclusive:false});try{var _query;if(query._fields){query={...query,_fields:Object(external_lodash_["uniq"])([...(get_normalized_comma_separable(query._fields)||[]),entity.key||DEFAULT_ENTITY_KEY]).join()};}
const path=Object(external_wp_url_["addQueryArgs"])(entity.baseURL,{...entity.baseURLParams,...query});let records=Object.values(await external_wp_apiFetch_default()({path}));if(query._fields){records=records.map(record=>{query._fields.split(',').forEach(field=>{if(!record.hasOwnProperty(field)){record[field]=undefined;}});return record;});}
dispatch.receiveEntityRecords(kind,name,records,query);if(!((_query=query)!==null&&_query!==void 0&&_query._fields)&&!query.context){const key=entity.key||DEFAULT_ENTITY_KEY;const resolutionsArgs=records.filter(record=>record[key]).map(record=>[kind,name,record[key]]);dispatch({type:'START_RESOLUTIONS',selectorName:'getEntityRecord',args:resolutionsArgs});dispatch({type:'FINISH_RESOLUTIONS',selectorName:'getEntityRecord',args:resolutionsArgs});}}catch(error){}finally{dispatch.__unstableReleaseStoreLock(lock);}};};resolvers_getEntityRecords.shouldInvalidate=(action,kind,name)=>{return(action.type==='RECEIVE_ITEMS'||action.type==='REMOVE_ITEMS')&&action.invalidateCache&&kind===action.kind&&name===action.name;};const resolvers_getCurrentTheme=()=>async _ref5=>{let{dispatch,resolveSelect}=_ref5;const activeThemes=await resolveSelect.getEntityRecords('root','theme',{status:'active'});dispatch.receiveCurrentTheme(activeThemes[0]);};const resolvers_getThemeSupports=forward_resolver('getCurrentTheme');const resolvers_getEmbedPreview=url=>async _ref6=>{let{dispatch}=_ref6;try{const embedProxyResponse=await external_wp_apiFetch_default()({path:Object(external_wp_url_["addQueryArgs"])('/oembed/1.0/proxy',{url})});dispatch.receiveEmbedPreview(url,embedProxyResponse);}catch(error){dispatch.receiveEmbedPreview(url,false);}};const resolvers_canUser=(action,resource,id)=>async _ref7=>{let{dispatch}=_ref7;const methods={create:'POST',read:'GET',update:'PUT',delete:'DELETE'};const method=methods[action];if(!method){throw new Error(`'${action}' is not a valid action.`);}
const path=id?`/wp/v2/${resource}/${id}`:`/wp/v2/${resource}`;let response;try{response=await external_wp_apiFetch_default()({path,method:id?'GET':'OPTIONS',parse:false});}catch(error){return;}
let allowHeader;if(Object(external_lodash_["hasIn"])(response,['headers','get'])){allowHeader=response.headers.get('allow');}else{allowHeader=Object(external_lodash_["get"])(response,['headers','Allow'],'');}
const key=Object(external_lodash_["compact"])([action,resource,id]).join('/');const isAllowed=Object(external_lodash_["includes"])(allowHeader,method);dispatch.receiveUserPermission(key,isAllowed);};const resolvers_canUserEditEntityRecord=(kind,name,recordId)=>async _ref8=>{let{dispatch}=_ref8;const entities=await dispatch(getKindEntities(kind));const entity=Object(external_lodash_["find"])(entities,{kind,name});if(!entity){return;}
const resource=entity.__unstable_rest_base;await dispatch(resolvers_canUser('update',resource,recordId));};const resolvers_getAutosaves=(postType,postId)=>async _ref9=>{let{dispatch,resolveSelect}=_ref9;const{rest_base:restBase}=await resolveSelect.getPostType(postType);const autosaves=await external_wp_apiFetch_default()({path:`/wp/v2/${restBase}/${postId}/autosaves?context=edit`});if(autosaves&&autosaves.length){dispatch.receiveAutosaves(postId,autosaves);}};const resolvers_getAutosave=(postType,postId)=>async _ref10=>{let{resolveSelect}=_ref10;await resolveSelect.getAutosaves(postType,postId);};const resolvers_experimentalGetTemplateForLink=link=>async _ref11=>{let{dispatch,resolveSelect}=_ref11;let template;try{template=await window.fetch(Object(external_wp_url_["addQueryArgs"])(link,{'_wp-find-template':true})).then(res=>res.json()).then(_ref12=>{let{data}=_ref12;return data;});}catch(e){}
if(!template){return;}
const record=await resolveSelect.getEntityRecord('postType','wp_template',template.id);if(record){dispatch.receiveEntityRecords('postType','wp_template',[record],{'find-template':link});}};resolvers_experimentalGetTemplateForLink.shouldInvalidate=action=>{return(action.type==='RECEIVE_ITEMS'||action.type==='REMOVE_ITEMS')&&action.invalidateCache&&action.kind==='postType'&&action.name==='wp_template';};const resolvers_experimentalGetCurrentGlobalStylesId=()=>async _ref13=>{let{dispatch,resolveSelect}=_ref13;const activeThemes=await resolveSelect.getEntityRecords('root','theme',{status:'active'});const globalStylesURL=Object(external_lodash_["get"])(activeThemes,[0,'_links','wp:user-global-styles',0,'href']);if(globalStylesURL){const globalStylesObject=await external_wp_apiFetch_default()({url:globalStylesURL});dispatch.__experimentalReceiveCurrentGlobalStylesId(globalStylesObject.id);}};const resolvers_experimentalGetCurrentThemeBaseGlobalStyles=()=>async _ref14=>{let{resolveSelect,dispatch}=_ref14;const currentTheme=await resolveSelect.getCurrentTheme();const themeGlobalStyles=await external_wp_apiFetch_default()({path:`/wp/v2/global-styles/themes/${currentTheme.stylesheet}`});await dispatch.__experimentalReceiveThemeBaseGlobalStyles(currentTheme.stylesheet,themeGlobalStyles);};function deepCopyLocksTreePath(tree,path){const newTree={...tree};let currentNode=newTree;for(const branchName of path){currentNode.children={...currentNode.children,[branchName]:{locks:[],children:{},...currentNode.children[branchName]}};currentNode=currentNode.children[branchName];}
return newTree;}
function getNode(tree,path){let currentNode=tree;for(const branchName of path){const nextNode=currentNode.children[branchName];if(!nextNode){return null;}
currentNode=nextNode;}
return currentNode;}
function*iteratePath(tree,path){let currentNode=tree;yield currentNode;for(const branchName of path){const nextNode=currentNode.children[branchName];if(!nextNode){break;}
yield nextNode;currentNode=nextNode;}}
function*iterateDescendants(node){const stack=Object.values(node.children);while(stack.length){const childNode=stack.pop();yield childNode;stack.push(...Object.values(childNode.children));}}
function hasConflictingLock(_ref,locks){let{exclusive}=_ref;if(exclusive&&locks.length){return true;}
if(!exclusive&&locks.filter(lock=>lock.exclusive).length){return true;}
return false;}
const DEFAULT_STATE={requests:[],tree:{locks:[],children:{}}};function reducer_locks(){let state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:DEFAULT_STATE;let action=arguments.length>1?arguments[1]:undefined;switch(action.type){case 'ENQUEUE_LOCK_REQUEST':{const{request}=action;return{...state,requests:[request,...state.requests]};}
case 'GRANT_LOCK_REQUEST':{const{lock,request}=action;const{store,path}=request;const storePath=[store,...path];const newTree=deepCopyLocksTreePath(state.tree,storePath);const node=getNode(newTree,storePath);node.locks=[...node.locks,lock];return{...state,requests:state.requests.filter(r=>r!==request),tree:newTree};}
case 'RELEASE_LOCK':{const{lock}=action;const storePath=[lock.store,...lock.path];const newTree=deepCopyLocksTreePath(state.tree,storePath);const node=getNode(newTree,storePath);node.locks=node.locks.filter(l=>l!==lock);return{...state,tree:newTree};}}
return state;}
function getPendingLockRequests(state){return state.requests;}
function isLockAvailable(state,store,path,_ref){let{exclusive}=_ref;const storePath=[store,...path];const locks=state.tree;for(const node of iteratePath(locks,storePath)){if(hasConflictingLock({exclusive},node.locks)){return false;}}
const node=getNode(locks,storePath);if(!node){return true;}
for(const descendant of iterateDescendants(node)){if(hasConflictingLock({exclusive},descendant.locks)){return false;}}
return true;}
function createLocks(){let state=reducer_locks(undefined,{type:'@@INIT'});function processPendingLockRequests(){for(const request of getPendingLockRequests(state)){const{store,path,exclusive,notifyAcquired}=request;if(isLockAvailable(state,store,path,{exclusive})){const lock={store,path,exclusive};state=reducer_locks(state,{type:'GRANT_LOCK_REQUEST',lock,request});notifyAcquired(lock);}}}
function acquire(store,path,exclusive){return new Promise(resolve=>{state=reducer_locks(state,{type:'ENQUEUE_LOCK_REQUEST',request:{store,path,exclusive,notifyAcquired:resolve}});processPendingLockRequests();});}
function release(lock){state=reducer_locks(state,{type:'RELEASE_LOCK',lock});processPendingLockRequests();}
return{acquire,release};}
function createLocksActions(){const locks=createLocks();function __unstableAcquireStoreLock(store,path,_ref){let{exclusive}=_ref;return()=>locks.acquire(store,path,exclusive);}
function __unstableReleaseStoreLock(lock){return()=>locks.release(lock);}
return{__unstableAcquireStoreLock,__unstableReleaseStoreLock};}
var external_wp_element_=__webpack_require__("GRId");var external_wp_blocks_=__webpack_require__("HSyU");const entity_provider_EMPTY_ARRAY=[];const entity_provider_entities={...defaultEntities.reduce((acc,entity)=>{if(!acc[entity.kind]){acc[entity.kind]={};}
acc[entity.kind][entity.name]={context:Object(external_wp_element_["createContext"])()};return acc;},{}),...kinds.reduce((acc,kind)=>{acc[kind.name]={};return acc;},{})};const entity_provider_getEntity=(kind,type)=>{if(!entity_provider_entities[kind]){throw new Error(`Missing entity config for kind: ${kind}.`);}
if(!entity_provider_entities[kind][type]){entity_provider_entities[kind][type]={context:Object(external_wp_element_["createContext"])()};}
return entity_provider_entities[kind][type];};function EntityProvider(_ref){let{kind,type,id,children}=_ref;const Provider=entity_provider_getEntity(kind,type).context.Provider;return Object(external_wp_element_["createElement"])(Provider,{value:id},children);}
function useEntityId(kind,type){return Object(external_wp_element_["useContext"])(entity_provider_getEntity(kind,type).context);}
function useEntityProp(kind,type,prop,_id){const providerId=useEntityId(kind,type);const id=_id!==null&&_id!==void 0?_id:providerId;const{value,fullValue}=Object(external_wp_data_["useSelect"])(select=>{const{getEntityRecord,getEditedEntityRecord}=select(STORE_NAME);const entity=getEntityRecord(kind,type,id);const editedEntity=getEditedEntityRecord(kind,type,id);return entity&&editedEntity?{value:editedEntity[prop],fullValue:entity[prop]}:{};},[kind,type,id,prop]);const{editEntityRecord}=Object(external_wp_data_["useDispatch"])(STORE_NAME);const setValue=Object(external_wp_element_["useCallback"])(newValue=>{editEntityRecord(kind,type,id,{[prop]:newValue});},[kind,type,id,prop]);return[value,setValue,fullValue];}
function useEntityBlockEditor(kind,type){let{id:_id}=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};const providerId=useEntityId(kind,type);const id=_id!==null&&_id!==void 0?_id:providerId;const{content,blocks}=Object(external_wp_data_["useSelect"])(select=>{const{getEditedEntityRecord}=select(STORE_NAME);const editedEntity=getEditedEntityRecord(kind,type,id);return{blocks:editedEntity.blocks,content:editedEntity.content};},[kind,type,id]);const{__unstableCreateUndoLevel,editEntityRecord}=Object(external_wp_data_["useDispatch"])(STORE_NAME);Object(external_wp_element_["useEffect"])(()=>{if(content&&typeof content!=='function'&&!blocks){const parsedContent=Object(external_wp_blocks_["parse"])(content);editEntityRecord(kind,type,id,{blocks:parsedContent},{undoIgnore:true});}},[content]);const onChange=Object(external_wp_element_["useCallback"])((newBlocks,options)=>{const{selection}=options;const edits={blocks:newBlocks,selection};const noChange=blocks===edits.blocks;if(noChange){return __unstableCreateUndoLevel(kind,type,id);}
edits.content=_ref2=>{let{blocks:blocksForSerialization=[]}=_ref2;return Object(external_wp_blocks_["__unstableSerializeAndClean"])(blocksForSerialization);};editEntityRecord(kind,type,id,edits);},[kind,type,id,blocks]);const onInput=Object(external_wp_element_["useCallback"])((newBlocks,options)=>{const{selection}=options;const edits={blocks:newBlocks,selection};editEntityRecord(kind,type,id,edits);},[kind,type,id]);return[blocks!==null&&blocks!==void 0?blocks:entity_provider_EMPTY_ARRAY,onInput,onChange];}
var external_wp_htmlEntities_=__webpack_require__("rmEH");const fetchLinkSuggestions=async function(search){let searchOptions=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};let settings=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};const{isInitialSuggestions=false,type=undefined,subtype=undefined,page=undefined,perPage=isInitialSuggestions?3:20}=searchOptions;const{disablePostFormats=false}=settings;const queries=[];if(!type||type==='post'){queries.push(external_wp_apiFetch_default()({path:Object(external_wp_url_["addQueryArgs"])('/wp/v2/search',{search,page,per_page:perPage,type:'post',subtype})}).then(results=>{return results.map(result=>{return{...result,meta:{kind:'post-type',subtype}};});}).catch(()=>[]));}
if(!type||type==='term'){queries.push(external_wp_apiFetch_default()({path:Object(external_wp_url_["addQueryArgs"])('/wp/v2/search',{search,page,per_page:perPage,type:'term',subtype})}).then(results=>{return results.map(result=>{return{...result,meta:{kind:'taxonomy',subtype}};});}).catch(()=>[]));}
if(!disablePostFormats&&(!type||type==='post-format')){queries.push(external_wp_apiFetch_default()({path:Object(external_wp_url_["addQueryArgs"])('/wp/v2/search',{search,page,per_page:perPage,type:'post-format',subtype})}).then(results=>{return results.map(result=>{return{...result,meta:{kind:'taxonomy',subtype}};});}).catch(()=>[]));}
return Promise.all(queries).then(results=>{return results.reduce((accumulator,current)=>accumulator.concat(current),[]).filter(result=>{return!!result.id;}).slice(0,perPage).map(result=>{var _result$meta;return{id:result.id,url:result.url,title:Object(external_wp_htmlEntities_["decodeEntities"])(result.title||'')||Object(external_wp_i18n_["__"])('(no title)'),type:result.subtype||result.type,kind:result===null||result===void 0?void 0:(_result$meta=result.meta)===null||_result$meta===void 0?void 0:_result$meta.kind};});});};var _experimental_fetch_link_suggestions=(fetchLinkSuggestions);const CACHE=new Map();const fetchUrlData=async function(url){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};const endpoint='/wp-block-editor/v1/url-details';const args={url:Object(external_wp_url_["prependHTTP"])(url)};if(!Object(external_wp_url_["isURL"])(url)){return Promise.reject(`${url} is not a valid URL.`);}
const protocol=Object(external_wp_url_["getProtocol"])(url);if(!Object(external_wp_url_["isValidProtocol"])(protocol)||!protocol.startsWith('http')||!/^https?:\/\/[^\/\s]/i.test(url)){return Promise.reject(`${url} does not have a valid protocol. URLs must be "http" based`);}
if(CACHE.has(url)){return CACHE.get(url);}
return external_wp_apiFetch_default()({path:Object(external_wp_url_["addQueryArgs"])(endpoint,args),...options}).then(res=>{CACHE.set(url,res);return res;});};var _experimental_fetch_url_data=(fetchUrlData);const entitySelectors=defaultEntities.reduce((result,entity)=>{const{kind,name}=entity;result[getMethodName(kind,name)]=(state,key,query)=>selectors_getEntityRecord(state,kind,name,key,query);result[getMethodName(kind,name,'get',true)]=function(state){for(var _len=arguments.length,args=new Array(_len>1?_len-1:0),_key=1;_key<_len;_key++){args[_key-1]=arguments[_key];}
return getEntityRecords(state,kind,name,...args);};return result;},{});const entityResolvers=defaultEntities.reduce((result,entity)=>{const{kind,name}=entity;result[getMethodName(kind,name)]=(key,query)=>resolvers_getEntityRecord(kind,name,key,query);const pluralMethodName=getMethodName(kind,name,'get',true);result[pluralMethodName]=function(){for(var _len2=arguments.length,args=new Array(_len2),_key2=0;_key2<_len2;_key2++){args[_key2]=arguments[_key2];}
return resolvers_getEntityRecords(kind,name,...args);};result[pluralMethodName].shouldInvalidate=function(action){for(var _len3=arguments.length,args=new Array(_len3>1?_len3-1:0),_key3=1;_key3<_len3;_key3++){args[_key3-1]=arguments[_key3];}
return resolvers_getEntityRecords.shouldInvalidate(action,kind,name,...args);};return result;},{});const entityActions=defaultEntities.reduce((result,entity)=>{const{kind,name}=entity;result[getMethodName(kind,name,'save')]=key=>saveEntityRecord(kind,name,key);result[getMethodName(kind,name,'delete')]=(key,query)=>deleteEntityRecord(kind,name,key,query);return result;},{});const storeConfig=()=>({reducer:build_module_reducer,actions:{...build_module_actions_namespaceObject,...entityActions,...createLocksActions()},selectors:{...build_module_selectors_namespaceObject,...entitySelectors},resolvers:{...resolvers_namespaceObject,...entityResolvers},__experimentalUseThunks:true});const build_module_store=Object(external_wp_data_["createReduxStore"])(STORE_NAME,storeConfig());Object(external_wp_data_["register"])(build_module_store);}),"l3Sj":(function(module,exports){(function(){module.exports=window["wp"]["i18n"];}());}),"pPDe":(function(module,__webpack_exports__,__webpack_require__){"use strict";var LEAF_KEY,hasWeakMap;LEAF_KEY={};hasWeakMap=typeof WeakMap!=='undefined';function arrayOf(value){return[value];}
function isObjectLike(value){return!!value&&'object'===typeof value;}
function createCache(){var cache={clear:function(){cache.head=null;},};return cache;}
function isShallowEqual(a,b,fromIndex){var i;if(a.length!==b.length){return false;}
for(i=fromIndex;i<a.length;i++){if(a[i]!==b[i]){return false;}}
return true;}
__webpack_exports__["a"]=(function(selector,getDependants){var rootCache,getCache;if(!getDependants){getDependants=arrayOf;}
function getRootCache(){return rootCache;}
function getWeakMapCache(dependants){var caches=rootCache,isUniqueByDependants=true,i,dependant,map,cache;for(i=0;i<dependants.length;i++){dependant=dependants[i];if(!isObjectLike(dependant)){isUniqueByDependants=false;break;}
if(caches.has(dependant)){caches=caches.get(dependant);}else{map=new WeakMap();caches.set(dependant,map);caches=map;}}
if(!caches.has(LEAF_KEY)){cache=createCache();cache.isUniqueByDependants=isUniqueByDependants;caches.set(LEAF_KEY,cache);}
return caches.get(LEAF_KEY);}
getCache=hasWeakMap?getWeakMapCache:getRootCache;function clear(){rootCache=hasWeakMap?new WeakMap():createCache();}
function callSelector(){var len=arguments.length,cache,node,i,args,dependants;args=new Array(len);for(i=0;i<len;i++){args[i]=arguments[i];}
dependants=getDependants.apply(null,args);cache=getCache(dependants);if(!cache.isUniqueByDependants){if(cache.lastDependants&&!isShallowEqual(dependants,cache.lastDependants,0)){cache.clear();}
cache.lastDependants=dependants;}
node=cache.head;while(node){if(!isShallowEqual(node.args,args,1)){node=node.next;continue;}
if(node!==cache.head){node.prev.next=node.next;if(node.next){node.next.prev=node.prev;}
node.next=cache.head;node.prev=null;cache.head.prev=node;cache.head=node;}
return node.val;}
node={val:selector.apply(null,args),};args[0]=null;node.args=args;if(cache.head){cache.head.prev=node;node.next=cache.head;}
cache.head=node;return node.val;}
callSelector.getDependants=getDependants;callSelector.clear=clear;clear();return callSelector;});}),"rl8x":(function(module,exports){(function(){module.exports=window["wp"]["isShallowEqual"];}());}),"rmEH":(function(module,exports){(function(){module.exports=window["wp"]["htmlEntities"];}());}),"ywyh":(function(module,exports){(function(){module.exports=window["wp"]["apiFetch"];}());})});