this["wp"]=this["wp"]||{};this["wp"]["hooks"]=(function(modules){var installedModules={};function __webpack_require__(moduleId){if(installedModules[moduleId]){return installedModules[moduleId].exports;}
var module=installedModules[moduleId]={i:moduleId,l:false,exports:{}};modules[moduleId].call(module.exports,module,module.exports,__webpack_require__);module.l=true;return module.exports;}
__webpack_require__.m=modules;__webpack_require__.c=installedModules;__webpack_require__.d=function(exports,name,getter){if(!__webpack_require__.o(exports,name)){Object.defineProperty(exports,name,{enumerable:true,get:getter});}};__webpack_require__.r=function(exports){if(typeof Symbol!=='undefined'&&Symbol.toStringTag){Object.defineProperty(exports,Symbol.toStringTag,{value:'Module'});}
Object.defineProperty(exports,'__esModule',{value:true});};__webpack_require__.t=function(value,mode){if(mode&1)value=__webpack_require__(value);if(mode&8)return value;if((mode&4)&&typeof value==='object'&&value&&value.__esModule)return value;var ns=Object.create(null);__webpack_require__.r(ns);Object.defineProperty(ns,'default',{enumerable:true,value:value});if(mode&2&&typeof value!='string')for(var key in value)__webpack_require__.d(ns,key,function(key){return value[key];}.bind(null,key));return ns;};__webpack_require__.n=function(module){var getter=module&&module.__esModule?function getDefault(){return module['default'];}:function getModuleExports(){return module;};__webpack_require__.d(getter,'a',getter);return getter;};__webpack_require__.o=function(object,property){return Object.prototype.hasOwnProperty.call(object,property);};__webpack_require__.p="";return __webpack_require__(__webpack_require__.s="gEOj");})
({"gEOj":(function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,"defaultHooks",function(){return defaultHooks;});__webpack_require__.d(__webpack_exports__,"createHooks",function(){return build_module_createHooks;});__webpack_require__.d(__webpack_exports__,"addAction",function(){return addAction;});__webpack_require__.d(__webpack_exports__,"addFilter",function(){return addFilter;});__webpack_require__.d(__webpack_exports__,"removeAction",function(){return removeAction;});__webpack_require__.d(__webpack_exports__,"removeFilter",function(){return removeFilter;});__webpack_require__.d(__webpack_exports__,"hasAction",function(){return hasAction;});__webpack_require__.d(__webpack_exports__,"hasFilter",function(){return hasFilter;});__webpack_require__.d(__webpack_exports__,"removeAllActions",function(){return removeAllActions;});__webpack_require__.d(__webpack_exports__,"removeAllFilters",function(){return removeAllFilters;});__webpack_require__.d(__webpack_exports__,"doAction",function(){return doAction;});__webpack_require__.d(__webpack_exports__,"applyFilters",function(){return applyFilters;});__webpack_require__.d(__webpack_exports__,"currentAction",function(){return currentAction;});__webpack_require__.d(__webpack_exports__,"currentFilter",function(){return currentFilter;});__webpack_require__.d(__webpack_exports__,"doingAction",function(){return doingAction;});__webpack_require__.d(__webpack_exports__,"doingFilter",function(){return doingFilter;});__webpack_require__.d(__webpack_exports__,"didAction",function(){return didAction;});__webpack_require__.d(__webpack_exports__,"didFilter",function(){return didFilter;});__webpack_require__.d(__webpack_exports__,"actions",function(){return actions;});__webpack_require__.d(__webpack_exports__,"filters",function(){return filters;});function validateNamespace(namespace){if('string'!==typeof namespace||''===namespace){console.error('The namespace must be a non-empty string.');return false;}
if(!/^[a-zA-Z][a-zA-Z0-9_.\-\/]*$/.test(namespace)){console.error('The namespace can only contain numbers, letters, dashes, periods, underscores and slashes.');return false;}
return true;}
var build_module_validateNamespace=(validateNamespace);function validateHookName(hookName){if('string'!==typeof hookName||''===hookName){console.error('The hook name must be a non-empty string.');return false;}
if(/^__/.test(hookName)){console.error('The hook name cannot begin with `__`.');return false;}
if(!/^[a-zA-Z][a-zA-Z0-9_.-]*$/.test(hookName)){console.error('The hook name can only contain numbers, letters, dashes, periods and underscores.');return false;}
return true;}
var build_module_validateHookName=(validateHookName);function createAddHook(hooks,storeKey){return function addHook(hookName,namespace,callback){let priority=arguments.length>3&&arguments[3]!==undefined?arguments[3]:10;const hooksStore=hooks[storeKey];if(!build_module_validateHookName(hookName)){return;}
if(!build_module_validateNamespace(namespace)){return;}
if('function'!==typeof callback){console.error('The hook callback must be a function.');return;}
if('number'!==typeof priority){console.error('If specified, the hook priority must be a number.');return;}
const handler={callback,priority,namespace};if(hooksStore[hookName]){const handlers=hooksStore[hookName].handlers;let i;for(i=handlers.length;i>0;i--){if(priority>=handlers[i-1].priority){break;}}
if(i===handlers.length){handlers[i]=handler;}else{handlers.splice(i,0,handler);}
hooksStore.__current.forEach(hookInfo=>{if(hookInfo.name===hookName&&hookInfo.currentIndex>=i){hookInfo.currentIndex++;}});}else{hooksStore[hookName]={handlers:[handler],runs:0};}
if(hookName!=='hookAdded'){hooks.doAction('hookAdded',hookName,namespace,callback,priority);}};}
var build_module_createAddHook=(createAddHook);function createRemoveHook(hooks,storeKey){let removeAll=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;return function removeHook(hookName,namespace){const hooksStore=hooks[storeKey];if(!build_module_validateHookName(hookName)){return;}
if(!removeAll&&!build_module_validateNamespace(namespace)){return;}
if(!hooksStore[hookName]){return 0;}
let handlersRemoved=0;if(removeAll){handlersRemoved=hooksStore[hookName].handlers.length;hooksStore[hookName]={runs:hooksStore[hookName].runs,handlers:[]};}else{const handlers=hooksStore[hookName].handlers;for(let i=handlers.length-1;i>=0;i--){if(handlers[i].namespace===namespace){handlers.splice(i,1);handlersRemoved++;hooksStore.__current.forEach(hookInfo=>{if(hookInfo.name===hookName&&hookInfo.currentIndex>=i){hookInfo.currentIndex--;}});}}}
if(hookName!=='hookRemoved'){hooks.doAction('hookRemoved',hookName,namespace);}
return handlersRemoved;};}
var build_module_createRemoveHook=(createRemoveHook);function createHasHook(hooks,storeKey){return function hasHook(hookName,namespace){const hooksStore=hooks[storeKey];if('undefined'!==typeof namespace){return hookName in hooksStore&&hooksStore[hookName].handlers.some(hook=>hook.namespace===namespace);}
return hookName in hooksStore;};}
var build_module_createHasHook=(createHasHook);function createRunHook(hooks,storeKey){let returnFirstArg=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;return function runHooks(hookName){const hooksStore=hooks[storeKey];if(!hooksStore[hookName]){hooksStore[hookName]={handlers:[],runs:0};}
hooksStore[hookName].runs++;const handlers=hooksStore[hookName].handlers;if(false){}
for(var _len=arguments.length,args=new Array(_len>1?_len-1:0),_key=1;_key<_len;_key++){args[_key-1]=arguments[_key];}
if(!handlers||!handlers.length){return returnFirstArg?args[0]:undefined;}
const hookInfo={name:hookName,currentIndex:0};hooksStore.__current.push(hookInfo);while(hookInfo.currentIndex<handlers.length){const handler=handlers[hookInfo.currentIndex];const result=handler.callback.apply(null,args);if(returnFirstArg){args[0]=result;}
hookInfo.currentIndex++;}
hooksStore.__current.pop();if(returnFirstArg){return args[0];}};}
var build_module_createRunHook=(createRunHook);function createCurrentHook(hooks,storeKey){return function currentHook(){var _hooksStore$__current,_hooksStore$__current2;const hooksStore=hooks[storeKey];return(_hooksStore$__current=(_hooksStore$__current2=hooksStore.__current[hooksStore.__current.length-1])===null||_hooksStore$__current2===void 0?void 0:_hooksStore$__current2.name)!==null&&_hooksStore$__current!==void 0?_hooksStore$__current:null;};}
var build_module_createCurrentHook=(createCurrentHook);function createDoingHook(hooks,storeKey){return function doingHook(hookName){const hooksStore=hooks[storeKey];if('undefined'===typeof hookName){return 'undefined'!==typeof hooksStore.__current[0];}
return hooksStore.__current[0]?hookName===hooksStore.__current[0].name:false;};}
var build_module_createDoingHook=(createDoingHook);function createDidHook(hooks,storeKey){return function didHook(hookName){const hooksStore=hooks[storeKey];if(!build_module_validateHookName(hookName)){return;}
return hooksStore[hookName]&&hooksStore[hookName].runs?hooksStore[hookName].runs:0;};}
var build_module_createDidHook=(createDidHook);class createHooks_Hooks{constructor(){this.actions=Object.create(null);this.actions.__current=[];this.filters=Object.create(null);this.filters.__current=[];this.addAction=build_module_createAddHook(this,'actions');this.addFilter=build_module_createAddHook(this,'filters');this.removeAction=build_module_createRemoveHook(this,'actions');this.removeFilter=build_module_createRemoveHook(this,'filters');this.hasAction=build_module_createHasHook(this,'actions');this.hasFilter=build_module_createHasHook(this,'filters');this.removeAllActions=build_module_createRemoveHook(this,'actions',true);this.removeAllFilters=build_module_createRemoveHook(this,'filters',true);this.doAction=build_module_createRunHook(this,'actions');this.applyFilters=build_module_createRunHook(this,'filters',true);this.currentAction=build_module_createCurrentHook(this,'actions');this.currentFilter=build_module_createCurrentHook(this,'filters');this.doingAction=build_module_createDoingHook(this,'actions');this.doingFilter=build_module_createDoingHook(this,'filters');this.didAction=build_module_createDidHook(this,'actions');this.didFilter=build_module_createDidHook(this,'filters');}}
function createHooks(){return new createHooks_Hooks();}
var build_module_createHooks=(createHooks);const defaultHooks=build_module_createHooks();const{addAction,addFilter,removeAction,removeFilter,hasAction,hasFilter,removeAllActions,removeAllFilters,doAction,applyFilters,currentAction,currentFilter,doingAction,doingFilter,didAction,didFilter,actions,filters}=defaultHooks;})});